import { Request, Response, Router } from "express";
import { Zodiac } from "../models/zodiac";
import { calculateZodiac } from "../controllers/zodiac";

const zodiacMapping: Record<string, string> = {
    "‡∏°‡∏±‡∏á‡∏Å‡∏£": "Capricorn", "‡∏Å‡∏∏‡∏°‡∏†‡πå": "Aquarius", "‡∏°‡∏µ‡∏ô": "Pisces",
    "‡πÄ‡∏°‡∏©": "Aries", "‡∏û‡∏§‡∏©‡∏†": "Taurus", "‡πÄ‡∏°‡∏ñ‡∏∏‡∏ô": "Gemini",
    "‡∏Å‡∏£‡∏Å‡∏é": "Cancer", "‡∏™‡∏¥‡∏á‡∏´‡πå": "Leo", "‡∏Å‡∏±‡∏ô‡∏¢‡πå": "Virgo",
    "‡∏ï‡∏∏‡∏•‡∏¢‡πå": "Libra", "‡∏û‡∏¥‡∏à‡∏¥‡∏Å": "Scorpio", "‡∏ò‡∏ô‡∏π": "Sagittarius"
};

export default (router: Router) => {
    // API ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏•‡∏±‡∏Ñ‡∏ô‡∏≤‡∏£‡∏≤‡∏®‡∏µ‡πÅ‡∏•‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å MongoDB
    router.post('/calculate', async (req: Request, res: Response) => {
        const { birthdate, birthtime } = req.body;

        if (!birthdate || !birthtime) {
            return res.status(400).json({ error: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏Å‡∏¥‡∏î" });
        }

        // 1Ô∏è‚É£ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏•‡∏±‡∏Ñ‡∏ô‡∏≤‡∏£‡∏≤‡∏®‡∏µ
        const result = calculateZodiac(birthdate, birthtime);

        if (!result.zodiacSign) {
            return res.status(400).json({ error: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏•‡∏±‡∏Ñ‡∏ô‡∏≤‡∏£‡∏≤‡∏®‡∏µ‡πÑ‡∏î‡πâ" });
        }

        // 2Ô∏è‚É£ ‡πÅ‡∏õ‡∏•‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏£‡∏≤‡∏®‡∏µ‡∏à‡∏≤‡∏Å‡πÑ‡∏ó‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©‡∏Å‡πà‡∏≠‡∏ô‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
        const englishZodiac = zodiacMapping[result.zodiacSign] || result.zodiacSign;
        console.log(`‚úÖ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÉ‡∏ô MongoDB: ${englishZodiac}`);

        try {
            // üîç Debug: ‡∏î‡∏π‡∏ß‡πà‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Å‡∏±‡∏ö Database ‡πÑ‡∏´‡∏ô
            console.log(`‚úÖ ‡πÉ‡∏ä‡πâ Database: ${process.env.MONGO_URL}`);

            // 3Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ MongoDB ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            const allZodiacs = await Zodiac.find().lean();
            console.log("üîç ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô MongoDB:", allZodiacs);

            // 4Ô∏è‚É£ ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô MongoDB (‡∏Å‡∏£‡∏ì‡∏µ‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏´‡∏ç‡πà/‡πÄ‡∏•‡πá‡∏Å‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô)
            const zodiacInfo = await Zodiac.findOne({ cardNAME: { $regex: `^${englishZodiac}$`, $options: "i" } }).lean();

            if (!zodiacInfo) {
                console.error(`‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô MongoDB ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏®‡∏µ: ${englishZodiac}`);
                return res.status(404).json({ error: `‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏®‡∏µ ${result.zodiacSign}` });
            }

            console.log(`‚úÖ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏®‡∏µ‡πÉ‡∏ô MongoDB:`, zodiacInfo);

            return res.json({
                birthdate,
                birthtime,
                zodiacSign: result.zodiacSign,
                meaning: zodiacInfo.cardMEANING,
                photo: zodiacInfo.cardPHOTO
            });
        } catch (error) {
            console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å MongoDB", error);
            return res.status(500).json({ error: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå" });
        }
    });

    return router; // ‚úÖ ‡πÅ‡∏Å‡πâ return router ‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
};
